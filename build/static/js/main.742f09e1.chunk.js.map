{"version":3,"sources":["components/tables/enhancedTable.js","App.js","reportWebVitals.js","index.js"],"names":["descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Typography","variant","component","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","tableData","setTableData","useEffect","userdata","forEach","user","name","first","last","email","phone","cell","address","location","street","number","city","state","postcode","Paper","TableContainer","Table","aria-labelledby","size","aria-label","TableBody","row","labelId","hover","role","tabIndex","scope","App","userData","setUserData","fetch","then","response","json","results","catch","err","console","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.742f09e1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction createData(name, email, phone, cell, address) {\n  return { name, email, phone, cell, address };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: true,\n    disablePadding: true,\n    label: \"Name\",\n  },\n  { id: \"email\", numeric: false, disablePadding: false, label: \"Email\" },\n  {\n    id: \"phone\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Company Phone\",\n  },\n  { id: \"cell\", numeric: false, disablePadding: false, label: \"Cell Phone\" },\n  { id: \"address\", numeric: false, disablePadding: false, label: \"Address\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"left\" : \"right\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n\n  return (\n    <Typography\n      className={classes.title}\n      variant=\"h6\"\n      id=\"tableTitle\"\n      component=\"div\"\n    >\n      Employees\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable({ props }) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [tableData, setTableData] = useState([]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n  useEffect(() => {\n    setTableData([]);\n    props.userdata.forEach((user) => {\n      setTableData((tableData) => [\n        ...tableData,\n        createData(\n          user.name.title + \" \" + user.name.first + \" \" + user.name.last,\n          user.email,\n          user.phone,\n          user.cell,\n          user.location.street.number +\n            \" \" +\n            user.location.street.name +\n            \" \" +\n            user.location.city +\n            \" \" +\n            user.location.state +\n            \" \" +\n            user.location.postcode\n        ),\n      ]);\n    });\n  }, [props.userdata]);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={\"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {stableSort(tableData, getComparator(order, orderBy)).map(\n                (row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.name + index}\n                    >\n                      <TableCell\n                        component=\"th\"\n                        id={labelId + index}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.email}</TableCell>\n                      <TableCell align=\"right\">{row.phone}</TableCell>\n                      <TableCell align=\"right\">{row.cell}</TableCell>\n                      <TableCell align=\"right\">{row.address}</TableCell>\n                    </TableRow>\n                  );\n                }\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport EnhancedTable from \"./components/tables/enhancedTable\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [userData, setUserData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/?format=json&results=10\")\n      .then((response) => response.json())\n      .then((user) => {\n        setUserData(user.results);\n      })\n      .catch((err) => console.err);\n  }, []);\n  return (\n    <div className=\"App\">\n      <EnhancedTable props={{ userdata: userData }} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}